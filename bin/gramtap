#!/usr/bin/env node

const { Command } = require('commander');
const ConfigManager = require('../src/config');
const CredentialPrompt = require('../src/prompt');
const TelegramClient = require('../src/telegram');
const program = new Command();

program
  .name('gramtap')
  .description('A developer-friendly CLI for accessing Telegram from the terminal')
  .version('1.0.0');

program
  .command('login')
  .description('Login to Telegram')
  .option('--setup', 'Show step-by-step guide for creating Telegram app and getting API credentials')
  .action(async (options) => {
    if (options.setup) {
      showTelegramSetupGuide();
    } else {
      await loginToTelegram();
    }
  });

function showTelegramSetupGuide() {
  console.log(`
🚀 Telegram App Setup Guide
============================

Before using Gramtap, you need to create a Telegram app and get your API credentials.
This is a one-time setup process that takes just a few minutes.

📋 What you'll need:
   • API ID (a number like 123456)
   • API Hash (a string like 'abc123def456...')

🔍 Why do I need these?
   API ID and Hash are unique identifiers that allow your app to communicate
   with Telegram's servers. They're like a username and password for your app.
   Don't worry - they're safe to use and won't give anyone access to your account.

📝 Step-by-step instructions:

   1. 🌐 Go to https://my.telegram.org
      
   2. 🔐 Log in with your phone number (the same one you use for Telegram)
      
   3. 📱 Enter the verification code sent to your Telegram app
      
   4. 🛠️  Click "API Development Tools"
      
   5. 📋 Fill out the form to create a new app:
      • App title: "Gramtap" (or any name you prefer)
      • Short name: "gramtap" (or any short identifier)
      • URL: Leave blank (not required)
      • Platform: Choose "Desktop"
      • Description: "CLI tool for Telegram" (optional)
      
   6. 📄 Click "Create application"
      
   7. 📝 Copy your credentials:
      • API ID: The number shown (like 123456)
      • API Hash: The long string shown (like 'abc123def456...')

🔐 Keep these credentials safe:
   • Don't share them publicly
   • Store them securely (Gramtap will help you with this)
   • You can regenerate them if needed from my.telegram.org

📖 Official documentation:
   • Telegram API docs: https://core.telegram.org/api/obtaining_api_id
   • App registration: https://my.telegram.org

✅ Next steps:
   Once you have your API ID and Hash, run 'gramtap login' to authenticate
   and start using Gramtap!

Need help? Check the README or open an issue on GitHub.
`);
}

async function loginToTelegram() {
  const config = new ConfigManager();
  const prompt = new CredentialPrompt();
  
  try {
    // Check if credentials already exist
    if (!config.hasCredentials()) {
      console.log('🔧 First time setup required...\n');
      
      // Prompt for credentials
      const credentials = await prompt.promptForCredentials();
      
      // Save credentials
      const success = config.setCredentials(credentials.apiId, credentials.apiHash);
      if (!success) {
        prompt.showError(new Error('Failed to save credentials to config file'));
        return;
      }
      
      prompt.showSuccess(config.getConfigPath());
      return;
    }
    
    // Load existing credentials
    const credentials = config.getCredentials();
    console.log('📱 Connecting to Telegram...\n');
    
    // Initialize Telegram client
    const client = new TelegramClient(credentials.apiId, credentials.apiHash, credentials.session);
    
    try {
      await client.initialize();
      
      // Check if already logged in
      if (client.isConnected()) {
        console.log('✅ Already logged in to Telegram!');
        
        // Save session if it changed
        const currentSession = client.getSession();
        if (currentSession && currentSession !== credentials.session) {
          config.updateSession(currentSession);
        }
        
        await client.disconnect();
        return;
      }
      
      // Need to authenticate
      const phoneNumber = await prompt.promptForPhoneNumber();
      
      // This is a simplified flow - actual Telegram authentication is more complex
      console.log('\n🔐 Authentication flow would continue here...');
      console.log('(Full authentication implementation coming in next phase)');
      
      await client.disconnect();
      
    } catch (error) {
      console.error('❌ Telegram connection failed:', error.message);
      
      // If credentials are invalid, offer to reconfigure
      if (error.message.includes('API_ID_INVALID') || error.message.includes('API_HASH_INVALID')) {
        console.log('\n💡 Your API credentials may be invalid.');
        console.log('Run "gramtap login --setup" for help creating new credentials.');
      }
    }
    
  } catch (error) {
    console.error('❌ Login failed:', error.message);
    process.exit(1);
  }
}

program.parse();